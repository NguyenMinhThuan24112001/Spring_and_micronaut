#    name: demomicronaut
micronaut:
  application:
    name: demomicronaut
---
#tag::security[]
micronaut:
  security:
    authentication: bearer # <1>
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: '"${JWT_GENERATOR_SIGNATURE_SECRET:pleaseChangeThisSecretForANewOne}"' # <2>
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
#end::security[]
---
#tag::refresh[]
micronaut:
  security:
    token:
      jwt:
        generator:
          refresh-token:
            secret: '"${JWT_GENERATOR_SIGNATURE_SECRET:pleaseChangeThisSecretForANewOne}"' # <1>
    intercept-url-map:
      - pattern: /swagger**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /swagger/**
        http-method: GET
        access:
          - isAnonymous()
#end::refresh[]
datasources:
  default:
    url: jdbc:postgresql://localhost:5432/micronaut_demo
    driverClassName: org.postgresql.Driver
    username: postgres
    password: '1234'
    schema-generate: CREATE_DROP
    dialect: POSTGRES
jpa:
  default:
    properties:
      hibernate:
        hbm2ddl.auto: update
        show_sql: true

